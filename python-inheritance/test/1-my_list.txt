#!/usr/bin/python3
import unittest
from io import StringIO
import sys
import importlib.util

# Dynamically import 1-my_list.py
spec = importlib.util.spec_from_file_location("1-my_list", "./1-my_list.py")
my_list_module = importlib.util.module_from_spec(spec)
spec.loader.exec_module(my_list_module)
MyList = my_list_module.MyList

class TestMyList(unittest.TestCase):
    def setUp(self):
        """Set up a MyList instance before each test"""
        self.my_list = MyList([1, 4, 2, 3, 5])

    def test_initial_list(self):
        """Test if the initial list is correct"""
        self.assertEqual(self.my_list, [1, 4, 2, 3, 5])

    def test_print_sorted(self):
        """Test if print_sorted prints the sorted list correctly"""
        captured_output = StringIO()      # Capture output
        sys.stdout = captured_output      # Redirect stdout

        self.my_list.print_sorted()
        
        sys.stdout = sys.__stdout__       # Reset redirect
        self.assertEqual(captured_output.getvalue().strip(), "[1, 2, 3, 4, 5]")

    def test_list_unchanged_after_sort(self):
        """Ensure the original list is unchanged after calling print_sorted"""
        self.my_list.print_sorted()
        self.assertEqual(self.my_list, [1, 4, 2, 3, 5])

if __name__ == '__main__':
    unittest.main()
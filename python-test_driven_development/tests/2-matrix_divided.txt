#!/usr/bin/python
# Valid test cases
matrix_divided([[4, 8], [16, 32]], 2) => [[2.0, 4.0], [8.0, 16.0]]
matrix_divided([[1, 2, 3], [4, 5, 6]], 3) => [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
matrix_divided([[9.5, 3.2], [7.1, 8.6]], 2.5) => [[3.8, 1.28], [2.84, 3.44]]
matrix_divided([[0, 0], [0, 0]], 1) => [[0.0, 0.0], [0.0, 0.0]]
matrix_divided([[-6, -12], [18, 24]], -6) => [[1.0, 2.0], [-3.0, -4.0]]
matrix_divided([[100, 200]], 10) => [[10.0, 20.0]]
matrix_divided([[5.55, 10.1]], 2) => [[2.78, 5.05]]
matrix_divided([[123456789]], 3) => [[41152263.0]]

# Edge case: division by a float with rounding
matrix_divided([[2, 3]], 3.0) => [[0.67, 1.0]]

# Edge case: single element matrix
matrix_divided([[10]], 2) => [[5.0]]

# Edge case: large numbers
matrix_divided([[1e6, 2e6], [3e6, 4e6]], 2) => [[500000.0, 1000000.0], [1500000.0, 2000000.0]]

# Invalid test cases (should raise TypeError)
matrix_divided("not a matrix", 2) => TypeError: matrix must be a matrix (list of lists) of integers/floats
matrix_divided([[1, 2], "invalid"], 2) => TypeError: matrix must be a matrix (list of lists) of integers/floats
matrix_divided([[1, "2"], [3, 4]], 2) => TypeError: matrix must be a matrix (list of lists) of integers/floats
matrix_divided([[1, 2], [3]], 2) => TypeError: Each row of the matrix must have the same size
matrix_divided([[1, 2], [3, 4]], "2") => TypeError: div must be a number
matrix_divided([[1, 2], [3, 4]], None) => TypeError: div must be a number

# Edge case: division by zero (should raise ZeroDivisionError)
matrix_divided([[1, 2], [3, 4]], 0) => ZeroDivisionError: division by zero

# Edge case: empty matrix (should raise TypeError)
matrix_divided([], 2) => TypeError: matrix must be a matrix (list of lists) of integers/floats
matrix_divided([[]], 2) => TypeError: Each row of the matrix must have the same size
